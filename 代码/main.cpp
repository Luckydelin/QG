#include<iostream>
#include<string>
#include"SingleList.h"
#include"DoubleList.h"
using namespace std;
void Menu();
void DoWork(List& List, int select);

int gflag;//-------------------------全局变量-------用来判断是单链表还是双链表-----------------------
int main()
{
	DoubleList DL;
	SingleList SL;
	while (true)
	{
		Menu();
		int select;
		cin >> select;
		if (select == 1|| select == 2|| select == 11|| select == 12)//---------------------配置全局变量---------------------------------
		      gflag = select;

		if (gflag == 1|| gflag == 11)//-----------------------------全局变量为1/11是单链表---------为2/12是双链表---------------
			DoWork(SL,select);
		else
			DoWork(DL,select);

		if (select == 0)
			return 0;
		system("pause");
		system("cls");
	}
}
void Menu()
{
	cout << endl << endl << endl;
	cout << "\t---------------------------------------------------------------------------------" << endl;
	cout << "\t--------------------------------系统功能菜单------------------------------------" << endl;
	cout <<"\t---------------------------------------------------------------------------------"<<endl;
	cout << "\t\t0--退出系统";
	cout << "\t\t1--创建单链表";
	cout << "\t\t2--创建双向表" << endl;
	cout << "\t\t3--销毁链表" ;
	cout << "\t\t4--插入结点" ;
	cout << "\t\t5--删除结点" <<endl;
	cout << "\t\t6--遍历链表" ;
	cout << "\t\t7--返回中间结点";
	cout << "\t\t8--翻转链表" << endl;
	cout << "\t\t9--奇偶位结点交换";
	cout << "\t10--链表是否为环";
	cout << "\t11--创建单链循环表" << endl;
	cout << "\t\t12--创建双链循环表" ;
	cout << "\t13--查找元素" << endl;
	cout << "\t---------------------------------------------------------------------------------" << endl;
	cout << endl;
	cout << "备注：循环链表不可以翻转，返回中间结点结果以及奇偶数位置的交换，否则将不断迭代!" << endl;
}
void DoWork(List & List,int select)//---------------------------------------动态实现双链表和单链表的菜单操作----------------------------------
{
	switch (select)
	{
	case 0:cout << "欢迎下次使用，祝你生活愉快！" << endl; return;
	case 1:
	case 2:List.Create_List(); break; //-----------------------创建单/双链表----------------------------------------------------------
	case 3:List.Destroy_List(); break;//--------------------------销毁单/双链表----------------------------------------------------------
	case 4:List.Insert_List(); break;//------------------------------链表的插入------------------------------------------------------------
	case 5:List.Delete_List(); break;//---------------------------------链表的删除-------------------------------------------------------------
	case 6:List.Show_List(); break;//---------------------------------------链表的遍历-----------------------------------------------------------
	case 7:List.CallBack_MidNode(); break;//------------------------------------链表的中间位置---返回位置及输出中间点数据------------------------------------------------------
	case 8:List.Reverse_List(); break;//----------------------------------------------链表的翻转-----------------------------------------------------
	case 9:List.Odd_Even_Swap(); break;//------------------------------------------------链表奇偶数位置交换-----------------------------------------------
	case 10:List.TF_Circle(); break;//--------------------------------------------------------判断是否为环-----------------------------------------------------
	case 11:
	case 12:List.Create_Circle_List(); break;//------------------------------------------------------创建单/双链循环表-------------------------------------------------
	case 13:List.Seek_List(); break;//--------------------------------------------------------------------链表查找------------------------------------------------------------
	default:cout << "输入有误请重新输入！" << endl; break;
	}
}